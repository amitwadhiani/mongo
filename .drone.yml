kind: pipeline
name: default

steps:
  - name: build
    image: openjdk:11-stretch
    commands:
      # - gradle test
      - ./gradlew clean build dockerPrepare --info --gradle-user-home=cache
  - name: docker
    image: plugins/docker
    settings:
      registry: meddo.azurecr.io
      repo: meddo.azurecr.io/provider
      context: build/docker
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      build_args:
        - JAR_FILE=provider-0.0.1-SNAPSHOT.jar
      tags:
        - latest
        - tag-${DRONE_COMMIT_SHA:0:7}
    when:
      branch: ['master', 'staging', 'uat']

  - name: deploy
    image: quay.io/ipedrazas/drone-helm
    environment:
      API_SERVER: https://kubernetes.default.svc.cluster.local/
      KUBERNETES_TOKEN:
        from_secret: kubernetes_token
    settings:
      skip_tls_verify: true
      chart: ./infra/provider-api
      release: provider-api
      tiller_ns: kube-system
      values: image.tag=tag-${DRONE_COMMIT_SHA:0:7}
      wait: true
    when:
      branch: ['master']

  - name:  staging-deploy
    image: quay.io/ipedrazas/drone-helm
    environment:
      API_SERVER: https://kubernetes.default.svc.cluster.local/
      KUBERNETES_TOKEN:
        from_secret: kubernetes_token
    settings:
      skip_tls_verify: true
      chart: ./infra/provider-api-staging
      release: provider-api-staging
      tiller_ns: kube-system
      values: image.tag=tag-${DRONE_COMMIT_SHA:0:7}
      wait: true
      # debug: true
    when:
      branch: ['staging']

  - name:  uat-deploy
    image: quay.io/ipedrazas/drone-helm
    environment:
      API_SERVER: https://kubernetes.default.svc.cluster.local/
      KUBERNETES_TOKEN:
        from_secret: kubernetes_token
    settings:
      skip_tls_verify: true
      chart: ./infra/provider-api-uat
      release: provider-api-uat
      tiller_ns: kube-system
      values: image.tag=tag-${DRONE_COMMIT_SHA:0:7}
      wait: true
      # debug: true
    when:
      branch: ['uat']

  - name:  notification
    image: plugins/slack
    settings:
      webhook: https://hooks.slack.com/services/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
      channel: releases
    when:
      status: [ success, failure ]
