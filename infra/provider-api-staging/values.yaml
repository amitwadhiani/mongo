# Default values for provider-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: meddo.azurecr.io/provider
  tag: latest
  pullPolicy: Always

service:
  type: ClusterIP
  port: 80


ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik
  path: /
  hosts:
  - provider.staging.meddo.tech
  - provider.staging.arctern.co
  - provider.staging.meddo.in
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 1.5
    memory: 2304Mi
  limits:
    cpu: 2
    memory: 2304Mi


tolerations: []

affinity: {}

spring:
  sentryDsn: "http://cd25307ed5de42fda0931259de54d581@sentry-local.default.svc.cluster.local:9000/38"
  meddo:
    wallet:
      discountPercentage: 10
  razorpay:
    apiKey: "rzp_test_mgedmJrvh77DfJ"
    apiSecret: "CGIiWhg4n1x8JqRSE4cSZJ72"
  cache:
    jcache:
      config: "classpath:ehcache/staging.xml"
  datasource:
    url: "jdbc:mysql://percona-percona.default.svc.cluster.local:3306/staging_arctern_provider?useSSL=false&createDatabaseIfNotExist=true"
    slaveUrl: "jdbc:mysql://percona-percona.default.svc.cluster.local:3306/staging_arctern_provider?useSSL=false&createDatabaseIfNotExist=true"
    username: "root"
    password: "uoGsYp2WYR"
  sqs:
    consumerKey: "https://sqs.ap-south-1.amazonaws.com/739878518990/provider-consumer-updates-simple-staging"
    accessKey: "AKIA2YRBSIDHAXCGRJ6T"
    secretKey: "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"
  rabbitmq:
    host: "rabbitmq-rabbitmq-ha.default.svc.cluster.local"
    port: "5672"
    username: "test"
    password: "test"
    queueName: "provider-item-updates-simple-staging"
    queueproviderName: "provider-updates-simple-staging"
    providerConsumerName: "provider-consumer-updates-simple-staging"
    notification:
      queueproviderItemName: "provider-item-staging-notification-updates-simple"
      queueproviderName: "provider-staging-notification-updates-simple"
      providerDiagnosticLabNotificationQueueName: "provider-staging-diagnostic-notification-updates-simple"
      queueOrderName: "order-staging-notification-updates-simple"
    middleware:
      providerDiagnosticLabQueueName: "provider-staging-diagnostic-updates-simple"
      diagnosticproviderQueueName: "diagnostic-provider-staging-updates-simple"
  security:
    signingKey: '4vvL2EefcZbBvUnJ'
    encodingStrength: 512
    securityRealm: 'Auth Staging'
    jwt:
      clientId: "LRL6ZCEt5Ag7whaa"
      clientSecret: "LwprrjdLzMc9zSq4XY4jWCz3hNWYMVV6"
  emr:
    apiUrl: "http://emr-api-staging.default.svc.cluster.local"
  auth:
    apiUrl: "http://auth-api-staging-traefik.default.svc.cluster.local/oauth/token"
    username: "admin"
    password: "admin@1c"
    authorization: "Basic TFJMNlpDRXQ1QWc3d2hhYTpMd3BycmpkTHpNYzl6U3E0WFk0aldDejNoTldZTVZWNg=="
jvmOpts: "-XX:+UnlockExperimentalVMOptions -XX:+PrintFlagsFinal -Xms1g -Xmx2g -javaagent:/newrelic/newrelic.jar -Dnewrelic.environment=staging"
ssl_cert_arn: arn:aws:acm:ap-south-1:739878518990:certificate/e69f73e9-67c7-461c-8d5e-ebe226d3cdda
